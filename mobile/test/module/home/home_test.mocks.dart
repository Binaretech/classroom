// Mocks generated by Mockito 5.3.2 from annotations
// in classroom_mobile/test/module/home/home_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i7;

import 'package:classroom_mobile/http/request.dart' as _i8;
import 'package:classroom_mobile/models/class.dart' as _i4;
import 'package:classroom_mobile/models/paginated_data.dart' as _i3;
import 'package:classroom_mobile/models/user.dart' as _i2;
import 'package:classroom_mobile/repository/class_repository.dart' as _i9;
import 'package:classroom_mobile/repository/user_repository.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginatedData_1<T> extends _i1.SmartFake
    implements _i3.PaginatedData<T> {
  _FakePaginatedData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClass_2 extends _i1.SmartFake implements _i4.Class {
  _FakeClass_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i5.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.User?> info() => (super.noSuchMethod(
        Invocation.method(
          #info,
          [],
        ),
        returnValue: _i6.Future<_i2.User?>.value(),
      ) as _i6.Future<_i2.User?>);
  @override
  _i6.Future<_i2.User> store({
    required String? name,
    required String? lastname,
    _i7.File? avatar,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #store,
          [],
          {
            #name: name,
            #lastname: lastname,
            #avatar: avatar,
          },
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #store,
            [],
            {
              #name: name,
              #lastname: lastname,
              #avatar: avatar,
            },
          ),
        )),
      ) as _i6.Future<_i2.User>);
  @override
  void showSnackBar(
    String? message, {
    Duration? duration = const Duration(seconds: 3),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [message],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool hasResponseErrors(_i8.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #hasResponseErrors,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool checkUnauthenticated(_i8.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #checkUnauthenticated,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  String extractErrorFromResponse(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractErrorFromResponse,
          [data],
        ),
        returnValue: '',
      ) as String);
  @override
  String extractValidationErrors(Map<String, dynamic>? validationErrors) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractValidationErrors,
          [validationErrors],
        ),
        returnValue: '',
      ) as String);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ClassRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockClassRepository extends _i1.Mock implements _i9.ClassRepository {
  MockClassRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.PaginatedData<_i4.Class>> get({int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {#page: page},
        ),
        returnValue: _i6.Future<_i3.PaginatedData<_i4.Class>>.value(
            _FakePaginatedData_1<_i4.Class>(
          this,
          Invocation.method(
            #get,
            [],
            {#page: page},
          ),
        )),
      ) as _i6.Future<_i3.PaginatedData<_i4.Class>>);
  @override
  _i6.Future<_i3.PaginatedData<_i2.User>> members(
    int? id, {
    int? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #members,
          [id],
          {#page: page},
        ),
        returnValue: _i6.Future<_i3.PaginatedData<_i2.User>>.value(
            _FakePaginatedData_1<_i2.User>(
          this,
          Invocation.method(
            #members,
            [id],
            {#page: page},
          ),
        )),
      ) as _i6.Future<_i3.PaginatedData<_i2.User>>);
  @override
  _i6.Future<_i4.Class> create({
    required String? name,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
          {
            #name: name,
            #description: description,
          },
        ),
        returnValue: _i6.Future<_i4.Class>.value(_FakeClass_2(
          this,
          Invocation.method(
            #create,
            [],
            {
              #name: name,
              #description: description,
            },
          ),
        )),
      ) as _i6.Future<_i4.Class>);
  @override
  _i6.Future<bool> archive(int? id) => (super.noSuchMethod(
        Invocation.method(
          #archive,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> unarchive(int? id) => (super.noSuchMethod(
        Invocation.method(
          #unarchive,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> delete(int? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  void showSnackBar(
    String? message, {
    Duration? duration = const Duration(seconds: 3),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [message],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool hasResponseErrors(_i8.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #hasResponseErrors,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool checkUnauthenticated(_i8.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #checkUnauthenticated,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  String extractErrorFromResponse(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractErrorFromResponse,
          [data],
        ),
        returnValue: '',
      ) as String);
  @override
  String extractValidationErrors(Map<String, dynamic>? validationErrors) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractValidationErrors,
          [validationErrors],
        ),
        returnValue: '',
      ) as String);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

// Mocks generated by Mockito 5.3.2 from annotations
// in classroom_mobile/test/module/login/login_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:classroom_mobile/http/request.dart' as _i5;
import 'package:classroom_mobile/repository/auth_repository.dart' as _i3;
import 'package:classroom_mobile/repository/resources/auth_resource.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResource_0 extends _i1.SmartFake implements _i2.AuthResource {
  _FakeAuthResource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthResource> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.AuthResource>.value(_FakeAuthResource_0(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.AuthResource>);
  @override
  _i4.Future<_i2.AuthResource> register(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.AuthResource>.value(_FakeAuthResource_0(
          this,
          Invocation.method(
            #register,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.AuthResource>);
  @override
  _i4.Future<_i2.AuthResource?> googleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #googleSignIn,
          [],
        ),
        returnValue: _i4.Future<_i2.AuthResource?>.value(),
      ) as _i4.Future<_i2.AuthResource?>);
  @override
  void showSnackBar(
    String? message, {
    Duration? duration = const Duration(seconds: 3),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [message],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool hasResponseErrors(_i5.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #hasResponseErrors,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool checkUnauthenticated(_i5.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #checkUnauthenticated,
          [response],
        ),
        returnValue: false,
      ) as bool);
  @override
  String extractErrorFromResponse(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractErrorFromResponse,
          [data],
        ),
        returnValue: '',
      ) as String);
  @override
  String extractValidationErrors(Map<String, dynamic>? validationErrors) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractValidationErrors,
          [validationErrors],
        ),
        returnValue: '',
      ) as String);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
